{"version":3,"sources":["comps/Nav.js","utils/api.js","comps/jumbotron/index.js","comps/SearchForm.js","comps/BookCard.js","pages/search.js","pages/saved.js","App.js","index.js"],"names":["Nav","className","to","type","data-toggle","data-target","aria-controls","aria-expanded","aria-label","id","window","location","pathname","API_KEY","process","REACT_APP_API_KEY","getGoogleBooks","search","axios","get","saveBook","bookData","post","getBook","deleteBook","delete","Jumbotron","props","style","backgroundImage","image","backgroundSize","title","lead","instructions","SearchForm","htmlFor","value","onChange","handleInputChange","placeholder","onClick","handleFormSubmit","BookCard","books","map","book","key","_id","googleBookId","subtitle","src","thumbnail","alt","authors","join","description","pageCount","publishedDate","href","link","target","rel","buttonType","buttonAction","buttonText","formatBookResults","googleApiResults","bookArray","formattedBook","volumeInfo","imageLinks","canonicalVolumeLink","push","Search","state","results","error","event","chosenBook","find","newSave","API","then","res","console","log","status","statusText","alert","show","catch","err","timeout","setState","preventDefault","formattedArray","data","items","this","Component","withAlert","SavedBook","loadSavedBook","getSavedBook","App","exact","path","component","Bookshack","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.ac7d7ee3.chunk.js","sourcesContent":["import React from 'react';\nimport {Link} from 'react-router-dom';\n\nexport const Nav = () => (\n  <nav className=\"navbar navbar-expand-lg navbar-dark bg-dark\">\n    <Link className=\"navbar-brand\" to=\"/\">\n      React Book Shack\n    </Link>\n    <div className=\"container\">\n      <button className=\"navbar-toggler\" type=\"button\" data-toggle=\"collapse\" data-target=\"#navbarSupportedContent\"\n              aria-controls=\"navbarSupportedContent\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\n        <span className=\"navbar-toggler-icon\"/>\n      </button>\n      <div className=\"collapse navbar-collapse\" id=\"navbarSupportedContent\">\n        <ul className=\"navbar-nav mr-auto\">\n          <li className=\"nav-item\">\n            <Link to=\"/\"\n                  className={window.location.pathname === \"/\" || window.location.pathname === \"/search\"\n                    ? \"nav-link active\"\n                    : \"nav-link\"}>Search</Link>\n          </li>\n          <li className=\"nav-item\">\n            <Link to=\"/bookshelf\"\n                  className={window.location.pathname === \"/bookshelf\"\n                    ? \"nav-link active\"\n                    : \"nav-link\"}>My Books</Link>\n          </li>\n        </ul>\n      </div>\n    </div>\n  </nav>\n);","import axios from 'axios';\n\nconst DEFAULT_HPP = '15';\nconst PATH_BASE = 'https://www.googleapis.com/books/v1';\nconst PATH_SEARCH = '/volumes';\nconst PARAM_SEARCH = 'q=';\nconst PARAM_HPP = 'maxResults=';\nconst API_KEY = process.env.REACT_APP_API_KEY;\n\nexport default {\n  getGoogleBooks: (search) => axios.get(`${PATH_BASE}${PATH_SEARCH}?${PARAM_SEARCH}${search}&${PARAM_HPP}${DEFAULT_HPP}&key=${API_KEY}`),\n  saveBook: (bookData) => axios.post('/api/bookShack', bookData),\n  getBook: () => axios.get('/api/bookShack'),\n  deleteBook: (id) => axios.delete(`/api/bookShack/${id}`)\n};","import React from 'react';\nimport './index.css';\n\nexport const Jumbotron = props => (\n  <div className=\"container mt-4\">\n    <div className=\"jumbotron text-center text-white\"\n         style={{backgroundImage: `url(${props.image})`, backgroundSize: 'cover'}}>\n      <h1 className=\"display-4 title\">{props.title}</h1>\n      <p className=\"lead\">{props.lead}</p>\n      <hr className=\"my-4\"/>\n      <p className=\"instructions\">{props.instructions}</p>\n    </div>\n  </div>\n);","import React from 'react';\n\nexport const SearchForm = props => (\n  <div className=\"row\">\n    <div className=\"col-lg-12\">\n      <div className=\"card\">\n        <div className=\"card-body\">\n          <form>\n            <div className=\"form-group\">\n              <label htmlFor=\"book-search\">\n                Search:\n              </label>\n              <input type=\"text\"\n                     value={props.search}\n                     onChange={props.handleInputChange}\n                     className=\"form-control\"\n                     id=\"book-search\"\n                     placeholder=\"Eloquent JavaScript 3rd Edition\"/>\n            </div>\n            <button type=\"submit\"\n                    className=\"btn btn-primary\"\n                    onClick={props.handleFormSubmit}>\n              Search\n            </button>\n          </form>\n        </div>\n      </div>\n    </div>\n  </div>\n);","import React from 'react';\n\nexport const BookCard = props => (\n  <div className=\"row mb-5\">\n    <div className=\"col-lg-12\">\n      {props.books.map(book => (\n        <div className=\"card mt-4\"\n             key={\n               book._id\n                 ? book._id\n                 : book.googleBookId\n             }>\n          <div className=\"card-body\">\n            <h5 className=\"card-title\">{book.title}</h5>\n            <h6 className=\"card-subtitle mb-2 text-muted\">{book.subtitle}</h6>\n            <div className=\"media\">\n              <img src={book.thumbnail}\n                   className=\"align-self-center mr-3\" alt=\"testing\"/>\n              <div className=\"media-body\">\n                <h6 className=\"mt-0\">{book.authors.join(', ')}</h6>\n                <p className=\"mb-0\">{book.description}</p>\n                <p className=\"mb-0\">\n                  <small className=\"text-muted\">{book.pageCount} pages.</small>\n                </p>\n                <p className=\"mb-2\">\n                  <small className=\"text-muted\">Published: {book.publishedDate}</small>\n                </p>\n              </div>\n            </div>\n            <a className=\"btn btn-info mr-1 mt-2\" href={book.link} target=\"_blank\"\n               rel=\"noopener noreferrer\">View Book</a>\n            <button className={props.buttonType}\n                    onClick={props.buttonAction}\n                    id={\n                      book._id\n                        ? book._id\n                        : book.googleBookId\n                    }\n            >\n              {props.buttonText}\n            </button>\n          </div>\n        </div>\n      ))}\n    </div>\n  </div>\n);","import React, {Component} from 'react';\nimport {withAlert} from 'react-alert';\nimport API from '../utils/api';\nimport {Jumbotron} from '../comps/jumbotron/index';\nimport {SearchForm} from '../comps/SearchForm';\nimport {BookCard} from '../comps/BookCard';\n\nconst formatBookResults = googleApiResults => {\n  const bookArray = [];\n  googleApiResults.map(book => {\n    const formattedBook = {\n      title: book.volumeInfo.title,\n      authors: book.volumeInfo.authors\n        ? book.volumeInfo.authors\n        : ['No Author Listed.'],\n      description: book.volumeInfo.description\n        ? book.volumeInfo.description\n        : 'No Description Listed.',\n      googleBookId: book.id,\n      thumbnail: book.volumeInfo.imageLinks\n        ? book.volumeInfo.imageLinks.thumbnail\n        : 'https://upload.wikimedia.org/wikipedia/commons/thumb/a/ac/No_image_available.svg/170px-No_image_available.svg.png',\n      link: book.volumeInfo.canonicalVolumeLink,\n      pageCount: book.volumeInfo.pageCount,\n      subtitle: book.volumeInfo.subtitle,\n      publishedDate: book.volumeInfo.publishedDate\n    };\n    bookArray.push(formattedBook);\n    return bookArray\n  });\n  return bookArray;\n};\nclass Search extends Component {\n  state = {\n    search: '',\n    results: [],\n    error: ''\n  };\n  saveBook = event => {\n\n    const chosenBook = this.state.results.find(book => book.googleBookId === event.target.id);\n    const newSave = {\n      title: chosenBook.title,\n      authors: chosenBook.authors,\n      description: chosenBook.description,\n      googleBookId: chosenBook.googleBookId,\n      thumbnail: chosenBook.thumbnail,\n      link: chosenBook.link,\n      pageCount: chosenBook.pageCount,\n      subtitle: chosenBook.subtitle,\n      publishedDate: chosenBook.publishedDate\n    };\n\n    API.saveBook(newSave)\n      .then(res => {\n        console.log(res.status, res.statusText);\n        this.props.alert.show('Book Saved!', {type: 'success'})\n      })\n      .catch(err => {\n        console.log(err);\n        this.props.alert.show('Sorry, There was an issue with something back here...', {\n          type: 'error',\n          timeout: 5000\n        })\n      })\n  };\n  handleInputChange = event => {\n    this.setState({search: event.target.value})\n  };\n  handleFormSubmit = event => {\n    event.preventDefault();\n    console.log(`Search for: ${this.state.search}`);\n    API.getGoogleBooks(this.state.search)\n      .then(res => {\n        const formattedArray = formatBookResults(res.data.items);\n        this.setState({results: formattedArray});\n      })\n      .catch(err => console.log(err))\n  };\n  render() {\n    return (\n      <div className=\"container\">\n        <Jumbotron\n          title=\"Search\"\n          lead=\"Using Google Books API\"\n          instructions=\"Search for a book; then view it on Google Books, or add it to your Bookshelf...\"\n          image=\"https://www.travelcaffeine.com/wp-content/uploads/2017/07/last-bookstore-tunnel-downtown-los-angeles-california-876.jpg\"/>\n        <SearchForm\n          handleInputChange={this.handleInputChange}\n          handleFormSubmit={this.handleFormSubmit}/>\n        <BookCard\n          books={this.state.results}\n          buttonAction={this.saveBook}\n          buttonType=\"btn btn-success mt-2\"\n          buttonText=\"Save Book\"/>\n      </div>\n    );\n  }\n}\n\n// Exporting Component Utilizing the Alerts.\nexport default withAlert(Search);","import React, {Component} from 'react';\nimport API from '../utils/api';\nimport {Jumbotron} from '../comps/jumbotron/index';\nimport {BookCard} from '../comps/BookCard';\n\nclass SavedBook extends Component {\n  state = {books: []};\n  loadSavedBook = () => {\n    API.getSavedBook()\n      .then(res => this.setState({books: res.data}))\n      .catch(err => console.log(err))\n  };\n\n  deleteBook = event => {\n    API.deleteBook(event.target.id)\n      .then(res => this.loadSavedBook())\n      .catch(err => console.log(err))\n  };\n\n  componentDidMount() {\n    this.loadSavedBook()\n  }\n\n  render() {\n    return (\n      <div className=\"container\">\n        <Jumbotron\n          title=\"My Books\"\n          lead=\"All of Your Favs One Location.\"\n          instructions=\"View your book at Google, or remove it altogether...\"\n          image=\"https://i0.wp.com/www.wayfaringviews.com/wp-content/uploads/2016/05/Last_Bookstore.jpg?ssl=1\"/>\n\n        <BookCard\n          books={this.state.books}\n          buttonAction={this.deleteBook}\n          buttonType=\"btn btn-danger mt-2\"\n          buttonText=\"Delete Book\"/>\n      </div>\n    )\n  }\n}\n\nexport default SavedBook;","import React from 'react';\nimport {BrowserRouter as Router, Route, Switch} from 'react-router-dom';\nimport {Nav} from './comps/Nav';\nimport Search from './pages/search';\nimport Bookshack from './pages/saved';\n\n\nconst App = () => (\n  <Router>\n    <div>\n      <Nav/>\n      <Switch>\n        <Route exact path=\"/\" component={Search}/>\n        <Route exact path=\"/search\" component={Search}/>\n        <Route exact path=\"/bookshack\" component={Bookshack}/>\n      </Switch>\n    </div>\n  </Router>\n);\n\nexport default App;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);"],"sourceRoot":""}